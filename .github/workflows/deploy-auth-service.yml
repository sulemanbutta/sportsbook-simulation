name: Deploy Auth Service to Cloud Run

on:
  push:
    paths:
      - 'services/auth-service/**'
      - '.github/workflows/deploy-auth-service.yml'
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy Auth Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}


      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        id: build_image
        run: |
          IMAGE_TAG=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sportsbook-repo/auth-service:${{ github.sha }}
          
          echo "Building image: $IMAGE_TAG"
          docker build -t $IMAGE_TAG -f services/auth-service/Dockerfile ./services/auth-service
          
          echo "Pushing image: $IMAGE_TAG"
          docker push $IMAGE_TAG
          
          echo "image_tag_output=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Debug deployed image name and secrets
        run: |
          echo "Image built and tagged: ${{ steps.build_image.outputs.image_tag_output }}" # Access the output
          echo "Cloud SQL Instance: ${{ secrets.DB_INSTANCE_CONNECTION_NAME }}" 

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy auth-service \
            --image=${{ steps.build_image.outputs.image_url }} \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --add-cloudsql-instances=sportsbook-simulation:us-central1:sportsbook-instance \
            --set-env-vars=JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --set-env-vars=DB_NAME=sportsbook_db \
            --set-env-vars=DB_USER=sportsbook_user \
            --set-env-vars=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --set-env-vars=DB_INSTANCE_CONNECTION_NAME=sportsbook-simulation:us-central1:sportsbook-instance \
            --service-account=github-actions-deployer@sportsbook-simulation.iam.gserviceaccount.com